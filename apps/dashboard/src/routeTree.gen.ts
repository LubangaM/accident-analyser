/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AnalyticsImport } from './routes/analytics'
import { Route as IndexImport } from './routes/index'
import { Route as AccidentsIndexImport } from './routes/accidents/index'
import { Route as AuthSignupImport } from './routes/auth/signup'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as AccidentsNewImport } from './routes/accidents/new'
import { Route as AccidentsIdEditImport } from './routes/accidents/$id/edit'

// Create/Update Routes

const AnalyticsRoute = AnalyticsImport.update({
  id: '/analytics',
  path: '/analytics',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AccidentsIndexRoute = AccidentsIndexImport.update({
  id: '/accidents/',
  path: '/accidents/',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  id: '/auth/signup',
  path: '/auth/signup',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const AccidentsNewRoute = AccidentsNewImport.update({
  id: '/accidents/new',
  path: '/accidents/new',
  getParentRoute: () => rootRoute,
} as any)

const AccidentsIdEditRoute = AccidentsIdEditImport.update({
  id: '/accidents/$id/edit',
  path: '/accidents/$id/edit',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/analytics': {
      id: '/analytics'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof AnalyticsImport
      parentRoute: typeof rootRoute
    }
    '/accidents/new': {
      id: '/accidents/new'
      path: '/accidents/new'
      fullPath: '/accidents/new'
      preLoaderRoute: typeof AccidentsNewImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof rootRoute
    }
    '/accidents/': {
      id: '/accidents/'
      path: '/accidents'
      fullPath: '/accidents'
      preLoaderRoute: typeof AccidentsIndexImport
      parentRoute: typeof rootRoute
    }
    '/accidents/$id/edit': {
      id: '/accidents/$id/edit'
      path: '/accidents/$id/edit'
      fullPath: '/accidents/$id/edit'
      preLoaderRoute: typeof AccidentsIdEditImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/analytics': typeof AnalyticsRoute
  '/accidents/new': typeof AccidentsNewRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/accidents': typeof AccidentsIndexRoute
  '/accidents/$id/edit': typeof AccidentsIdEditRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/analytics': typeof AnalyticsRoute
  '/accidents/new': typeof AccidentsNewRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/accidents': typeof AccidentsIndexRoute
  '/accidents/$id/edit': typeof AccidentsIdEditRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/analytics': typeof AnalyticsRoute
  '/accidents/new': typeof AccidentsNewRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/accidents/': typeof AccidentsIndexRoute
  '/accidents/$id/edit': typeof AccidentsIdEditRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/analytics'
    | '/accidents/new'
    | '/auth/login'
    | '/auth/signup'
    | '/accidents'
    | '/accidents/$id/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/analytics'
    | '/accidents/new'
    | '/auth/login'
    | '/auth/signup'
    | '/accidents'
    | '/accidents/$id/edit'
  id:
    | '__root__'
    | '/'
    | '/analytics'
    | '/accidents/new'
    | '/auth/login'
    | '/auth/signup'
    | '/accidents/'
    | '/accidents/$id/edit'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AnalyticsRoute: typeof AnalyticsRoute
  AccidentsNewRoute: typeof AccidentsNewRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignupRoute: typeof AuthSignupRoute
  AccidentsIndexRoute: typeof AccidentsIndexRoute
  AccidentsIdEditRoute: typeof AccidentsIdEditRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AnalyticsRoute: AnalyticsRoute,
  AccidentsNewRoute: AccidentsNewRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthSignupRoute: AuthSignupRoute,
  AccidentsIndexRoute: AccidentsIndexRoute,
  AccidentsIdEditRoute: AccidentsIdEditRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/analytics",
        "/accidents/new",
        "/auth/login",
        "/auth/signup",
        "/accidents/",
        "/accidents/$id/edit"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/analytics": {
      "filePath": "analytics.tsx"
    },
    "/accidents/new": {
      "filePath": "accidents/new.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/signup": {
      "filePath": "auth/signup.tsx"
    },
    "/accidents/": {
      "filePath": "accidents/index.tsx"
    },
    "/accidents/$id/edit": {
      "filePath": "accidents/$id/edit.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
